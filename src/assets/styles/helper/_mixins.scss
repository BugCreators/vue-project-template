@charset "utf-8";
//常用mixins
/*
清除浮动
=========================================*/

@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin border-radius($radius: 50%) {
  border-radius: $radius;
}

/*
多行文字截断
=========================================*/

@mixin multiTextOverflow($line: 2) {
  display: -webkit-box;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}

/*
单行文字截断
=========================================*/
@mixin ellipsis($width: 100%) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: $width;
}
/*
设置透明度
=========================================*/

@mixin opacity($alpha) {
  opacity: $alpha;
  filter: alpha(opacity=$alpha * 100);
}

/*
三角箭头
=========================================*/

@mixin arrow($dir: bottom, $size: 6px, $color: black) {
  width: 0px;
  height: 0px;
  font-size: 0;
  overflow: hidden;
  border-width: $size;
  vertical-align: middle;
  $style: null;
  @if $dir==top {
    $style: transparent transparent $color transparent;
    border-style: dashed dashed solid dashed;
  } @else if $dir==right {
    $style: transparent transparent transparent $color;
    border-style: dashed dashed dashed solid;
  } @else if $dir==bottom {
    $style: $color transparent transparent;
    border-style: solid dashed dashed dashed;
  } @else if $dir==left {
    $style: transparent $color transparent transparent;
    border-style: dashed solid dashed dashed;
  }
  border-color: $style;
}

/*
dis: inline-block
=========================================*/

@mixin dib() {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

/*
flex布局
=========================================*/

// 弹性盒布局
@mixin dis-flex() {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
}

// 弹性盒布局（垂直）
@mixin dis-flex-v() {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  flex-direction: column;
}

//flex : 1
@mixin flex-1() {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
}

// 垂直居中
@mixin align-center() {
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
}

// 水平居中
@mixin hor-center() {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

/*
设置行高
=========================================*/
@mixin l-h($val) {
  height: $val;
  line-height: $val;
}

/*
最小高度
=========================================*/
@mixin min-height($h) {
  min-height: $h;
  height: auto !important;
  height: $h;
}

/*
绝对居中
=========================================*/
@mixin pos-abs() {
  position: absolute;
  -webkit-transform: transLate(-50%, -50%);
  -ms-transform: transLate(-50%, -50%);
  transform: transLate(-50%, -50%);
}

/*
渐变
=========================================*/
@mixin gradient($color-from, $color-to, $dir: left) {
  @if $color-from and $color-to {
    $alpha: alpha($color-to);
    @if $alpha < 1 {
      $color-rgb: change_color($color, $alpha: 1);
      background-color: $color-rgb;
    } @else {
      background-color: $color-to;
    }

    $ie-from: ie-hex-str($color-from);
    $ie-to: ie-hex-str($color-to);

    $webkit: "left top, left bottom";
    $spec: "top";
    $ie: 0;

    @if $dir == top {
      $webkit: "left top, left bottom";
      $spec: "top";
      $ie: 0;
    }
    @if $dir == left {
      $webkit: "left top, right top";
      $spec: "to right";
      $ie: 1;
    }
    @if $dir == left-top {
      $webkit: "left top, right bottom";
      $spec: "135deg";
      $ie: 1;
    }
    @if $dir == left-bottom {
      $webkit: "left bottom, right top";
      $spec: "45deg";
      $ie: 1;
    }

    background-image: -webkit-gradient(
      $dir,
      #{$webkit},
      from($color-from),
      to($color-to)
    );
    background-image: -webkit-linear-gradient(#{$spec}, $color-from, $color-to);
    background-image: linear-gradient(#{$spec}, $color-from, $color-to);
    -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$ie-from}', endColorstr='#{$ie-to}', GradientType=#{$ie});
  }
}

/*
阴影
=========================================*/
@mixin boxShadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
  -moz-box-shadow: $x $y $blur $color;
  box-shadow: $x $y $blur $color;
}

/*
边框
=========================================*/
// @mixin border($size:1,$style:solid,$color) {
//     border:$size $style $color;
// }

/*
disabled 禁用样式
=========================================*/
@mixin disabled($bgColor: #e6e6e6, $textColor: #ababab) {
  background-color: $bgColor;
  color: $textColor;
  cursor: not-allowed;
}
/*
隐藏
=========================================*/
@mixin hidden($extend: true) {
  @if $extend {
    @extend %hidden;
  } @else {
    display: none;
    visibility: hidden;
  }
}
